<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook source-build='2019.1.3 (20191.19.0417.1429)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='EVData (Tableau)' inline='true' name='federated.0kj32fc05irryj1a0kwy61q50syt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau' name='excel-direct.0szh8iv1v46som138y4o21ghqxu6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Dropbox/Kavana/Master of Science/Academics/Visualisation/Tableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[EVData].[StateFull]' />
                <expression op='[fuelPrices].[State]' />
              </expression>
              <expression op='='>
                <expression op='[EVData].[Model Year]' />
                <expression op='[fuelPrices].[Year]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[EVData].[StateFull]' />
                  <expression op='[median_income].[State]' />
                </expression>
                <expression op='='>
                  <expression op='[EVData].[Model Year]' />
                  <expression op='[median_income].[Year]' />
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[EVData].[StateFull]' />
                  <expression op='[incentive].[State]' />
                </expression>
              </clause>
              <relation connection='excel-direct.0szh8iv1v46som138y4o21ghqxu6' name='EVData' table='[EVData$]' type='table'>
                <columns gridOrigin='A1:R10001:no:A1:R10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='VIN (1-10)' ordinal='0' />
                  <column datatype='string' name='County' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='integer' name='Postal Code' ordinal='4' />
                  <column datatype='integer' name='Model Year' ordinal='5' />
                  <column datatype='string' name='Make' ordinal='6' />
                  <column datatype='string' name='Model' ordinal='7' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
                  <column datatype='integer' name='Electric Range' ordinal='10' />
                  <column datatype='integer' name='Base MSRP' ordinal='11' />
                  <column datatype='integer' name='Legislative District' ordinal='12' />
                  <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
                  <column datatype='string' name='Vehicle Location' ordinal='14' />
                  <column datatype='string' name='Electric Utility' ordinal='15' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='16' />
                  <column datatype='string' name='StateFull' ordinal='17' />
                </columns>
              </relation>
              <relation connection='excel-direct.0szh8iv1v46som138y4o21ghqxu6' name='incentive' table='[incentive$]' type='table'>
                <columns gridOrigin='A1:B51:no:A1:B51:0' header='yes' outcome='6'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Incentive' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0szh8iv1v46som138y4o21ghqxu6' name='median_income' table='[median_income$]' type='table'>
              <columns gridOrigin='A1:E552:no:A1:E552:0' header='yes' outcome='2'>
                <column datatype='integer' name='Year' ordinal='0' />
                <column datatype='integer' name='MedianIncome' ordinal='1' />
                <column datatype='string' name='State' ordinal='2' />
                <column datatype='real' name='F4' ordinal='3' />
                <column datatype='string' name='F5' ordinal='4' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0szh8iv1v46som138y4o21ghqxu6' name='fuelPrices' table='[fuelPrices$]' type='table'>
            <columns gridOrigin='A1:E551:no:A1:E551:0' header='yes' outcome='2'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='real' name='FuelPrice' ordinal='1' />
              <column datatype='string' name='State' ordinal='2' />
              <column datatype='real' name='F4' ordinal='3' />
              <column datatype='string' name='F5' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[2020 Census Tract]' value='[EVData].[2020 Census Tract]' />
          <map key='[Base MSRP]' value='[EVData].[Base MSRP]' />
          <map key='[City]' value='[EVData].[City]' />
          <map key='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' value='[EVData].[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' />
          <map key='[County]' value='[EVData].[County]' />
          <map key='[DOL Vehicle ID]' value='[EVData].[DOL Vehicle ID]' />
          <map key='[Electric Range]' value='[EVData].[Electric Range]' />
          <map key='[Electric Utility]' value='[EVData].[Electric Utility]' />
          <map key='[Electric Vehicle Type]' value='[EVData].[Electric Vehicle Type]' />
          <map key='[F4 (fuelPrices)]' value='[fuelPrices].[F4]' />
          <map key='[F4]' value='[median_income].[F4]' />
          <map key='[F5 (fuelPrices)]' value='[fuelPrices].[F5]' />
          <map key='[F5]' value='[median_income].[F5]' />
          <map key='[FuelPrice]' value='[fuelPrices].[FuelPrice]' />
          <map key='[Incentive]' value='[incentive].[Incentive]' />
          <map key='[Legislative District]' value='[EVData].[Legislative District]' />
          <map key='[Make]' value='[EVData].[Make]' />
          <map key='[MedianIncome]' value='[median_income].[MedianIncome]' />
          <map key='[Model Year]' value='[EVData].[Model Year]' />
          <map key='[Model]' value='[EVData].[Model]' />
          <map key='[Postal Code]' value='[EVData].[Postal Code]' />
          <map key='[State (fuelPrices)]' value='[fuelPrices].[State]' />
          <map key='[State (incentive)]' value='[incentive].[State]' />
          <map key='[State (median!income)]' value='[median_income].[State]' />
          <map key='[StateFull]' value='[EVData].[StateFull]' />
          <map key='[State]' value='[EVData].[State]' />
          <map key='[VIN (1-10)]' value='[EVData].[VIN (1-10)]' />
          <map key='[Vehicle Location]' value='[EVData].[Vehicle Location]' />
          <map key='[Year (fuelPrices)]' value='[fuelPrices].[Year]' />
          <map key='[Year]' value='[median_income].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>VIN (1-10)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VIN (1-10)]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>VIN (1-10)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOL Vehicle ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOL Vehicle ID]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>DOL Vehicle ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Vehicle Location]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Vehicle Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateFull</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateFull]</local-name>
            <parent-name>[EVData]</parent-name>
            <remote-alias>StateFull</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EVData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R10001:no:A1:R10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (incentive)]</local-name>
            <parent-name>[incentive]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incentive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Incentive]</local-name>
            <parent-name>[incentive]</parent-name>
            <remote-alias>Incentive</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[incentive]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B51:no:A1:B51:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[median_income]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianIncome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianIncome]</local-name>
            <parent-name>[median_income]</parent-name>
            <remote-alias>MedianIncome</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (median!income)]</local-name>
            <parent-name>[median_income]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[median_income]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[median_income]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[median_income]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E552:no:A1:E552:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (fuelPrices)]</local-name>
            <parent-name>[fuelPrices]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FuelPrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FuelPrice]</local-name>
            <parent-name>[fuelPrices]</parent-name>
            <remote-alias>FuelPrice</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (fuelPrices)]</local-name>
            <parent-name>[fuelPrices]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4 (fuelPrices)]</local-name>
            <parent-name>[fuelPrices]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F5 (fuelPrices)]</local-name>
            <parent-name>[fuelPrices]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fuelPrices]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E551:no:A1:E551:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Electric Vehicle Type1' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
          <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
        </aliases>
      </column>
      <column caption='Fuel Price' datatype='real' name='[FuelPrice]' role='measure' type='quantitative' />
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column caption='Median Income' datatype='integer' name='[MedianIncome]' role='measure' type='quantitative' />
      <column caption='Model Year1' datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State (fuelPrices)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (incentive)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (median!income)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Vin (1-10)' datatype='string' name='[VIN (1-10)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year (fuelPrices)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[MedianIncome]' derivation='Attribute' name='[attr:MedianIncome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FuelPrice]' derivation='Avg' name='[avg:FuelPrice:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MedianIncome]' derivation='Avg' name='[avg:MedianIncome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MedianIncome]' derivation='Median' name='[med:MedianIncome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[MedianIncome]' derivation='None' name='[none:MedianIncome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State (incentive)]' derivation='None' name='[none:State (incentive):nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[MedianIncome]' derivation='Sum' name='[sum:MedianIncome:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Make)' hidden='true' name='[Action (Make)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Make]' />
        </groupfilter>
      </group>
      <group caption='Action (State (incentive))' hidden='true' name='[Action (State (incentive))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (incentive)]' />
        </groupfilter>
      </group>
      <group caption='Action (State (incentive),State Full)' hidden='true' name='[Action (State (incentive),State Full)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (incentive)]' />
          <groupfilter function='level-members' level='[StateFull]' />
        </groupfilter>
      </group>
      <group caption='Action (State Full,State)' hidden='true' name='[Action (State Full,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[StateFull]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:County:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (State (incentive),State Full)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (incentive):nk]' />
          <groupfilter function='level-members' level='[none:StateFull:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.567308' measure-ordering='alphabetic' measure-percentage='0.432692' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Make:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;GENESIS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TOYOTA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AUDI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MITSUBISHI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHEVROLET&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RIVIAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JEEP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HONDA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHRYSLER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MERCEDES-BENZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BENTLEY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NISSAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LINCOLN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FIAT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SUBARU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LAND ROVER&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LUCID&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HYUNDAI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VOLVO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FORD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TESLA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;POLESTAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LEXUS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JAGUAR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CADILLAC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PORSCHE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2020</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2016</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2021</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2017</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2013</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2018</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2019</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2023</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:StateFull:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:MedianIncome:qk]:1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[attr:MedianIncome:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:MedianIncome:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[Latitude (generated)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[Longitude (generated)]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[med:MedianIncome:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[none:MedianIncome:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:FuelPrice:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:MedianIncome:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Electric Vehicle Type:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Battery Electric Vehicle (BEV)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Electric Vehicle Type:nk]' type='palette'>
            <map to='#b07aa1'>
              <bucket>&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Battery Electric Vehicle (BEV)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:avg:MedianIncome:qk]&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Clean Alternative Fuel Vehicle Eligible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Not eligible due to low battery range&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eligibility unknown as battery range has not been researched&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0kj32fc05irryj1a0kwy61q50syt'>
      <datasources>
        <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
      </datasources>
      <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
        <column datatype='string' name='[Make]' role='dimension' type='nominal' />
        <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
        <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]'>
        <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]'>
        <groupfilter function='level-members' level='[none:StateFull:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]'>
        <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='CountOfEVByState'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>EV Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' value='43' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]' value='48' />
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' />
              <text column='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]</rows>
        <cols>[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{035FD3AE-F82B-4DD3-83BE-5483EE138E19}' />
    </worksheet>
    <worksheet name='Credit eligibility of EV’s based on its electric range.'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Credit Eligibility based on range</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='Median' name='[med:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[med:Electric Range:qk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kj32fc05irryj1a0kwy61q50syt].[med:Electric Range:qk]</rows>
        <cols>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{FBAA32BE-CE80-4A28-B804-A475318B0489}' />
    </worksheet>
    <worksheet name='EV range and its MSRP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>EV&apos;s range and base MSRP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column datatype='integer' name='[Base MSRP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Base MSRP]' derivation='Avg' name='[avg:Base MSRP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='Avg' name='[avg:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='wrap' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' value='off' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' value='left' />
            <format attr='wrap' data-class='subtotal' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' value='off' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Base MSRP:qk]' num-steps='10' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Electric Range:qk]' />
              <text column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]' />
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Base MSRP:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='7' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D2669949-0FA1-415D-878C-41A1A71A5DB2}' />
    </worksheet>
    <worksheet name='Eligibility of Tax credit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Eligibility count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[pcto:sum:Number of Records:qk]' value='p0%' />
            <format attr='text-format' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[pcto:cnt:Number of Records:qk]' value='p0%' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' value='Clean Alternative Fuel Vehicle (CAFV) Eligibility' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <wedge-size column='[federated.0kj32fc05irryj1a0kwy61q50syt].[pcto:sum:Number of Records:qk]' />
              <size column='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' />
              <text column='[federated.0kj32fc05irryj1a0kwy61q50syt].[pcto:cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BB74AF42-2688-4B9F-9357-D30F288B8047}' />
    </worksheet>
    <worksheet name='FuelPrices'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Fuel Prices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column caption='Fuel Price' datatype='real' name='[FuelPrice]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year (fuelPrices)]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[FuelPrice]' derivation='Avg' name='[avg:FuelPrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (fuelPrices)]' derivation='None' name='[none:Year (fuelPrices):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year (fuelPrices):qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:FuelPrice:qk]' num-steps='10' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:FuelPrice:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Forecast Indicator:nk]</column>
              </excluded-factors>
            </trendline>
          </pane>
        </panes>
        <rows>[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:FuelPrice:qk]</rows>
        <cols>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year (fuelPrices):qk]</cols>
      </table>
      <simple-id uuid='{52C1158F-6874-4043-932E-9C05E25746E8}' />
    </worksheet>
    <worksheet name='IncentiveByState'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Incentive By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column datatype='integer' name='[Incentive]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Incentive]' derivation='Avg' name='[avg:Incentive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' direction='DESC' using='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Incentive:qk]' />
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]' value='48' />
            <format attr='width' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Incentive:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Incentive:qk]' num-steps='10' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Incentive:qk]' />
              <text column='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Incentive:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{8A4C08D1-848A-4B46-8E21-58B9D4BB93B2}' />
    </worksheet>
    <worksheet name='IncreaseInEVUse'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Increase in EV Use</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column caption='Electric Vehicle Type1' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='Model Year1' datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Model Year:qk]' field-type='quantitative' max='2025' min='2012' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Electric Vehicle Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kj32fc05irryj1a0kwy61q50syt].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Model Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-zero' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{F8471388-26F7-410F-8581-740E0EDB7B49}' />
    </worksheet>
    <worksheet name='MakerOfMostSoldEV'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Makers of max EV sold</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' />
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' />
              <text column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]' />
              <text column='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='6'>&lt;[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontsize='6'>&lt;[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{484A8257-45E3-46CE-9BA5-677D3CB97102}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Vin (1-10)' datatype='string' name='[VIN (1-10)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year (fuelPrices)]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[VIN (1-10)]' derivation='Count' name='[cnt:VIN (1-10):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (fuelPrices)]' derivation='None' name='[none:Year (fuelPrices):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year (fuelPrices):ok]'>
            <groupfilter function='level-members' level='[none:Year (fuelPrices):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year (fuelPrices):ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[Latitude (generated)]' field-type='quantitative' max-size='1' min-size='0' type='rangesize' />
            <encoding attr='color' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[cnt:VIN (1-10):qk]' num-steps='10' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[Longitude (generated)]' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='true' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='area-red-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[cnt:VIN (1-10):qk]' />
              <text column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]' />
              <lod column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' />
              <lod column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]' />
              <geometry column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run>&lt;[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='5' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='7.4908275604248047' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kj32fc05irryj1a0kwy61q50syt].[Latitude (generated)]</rows>
        <cols>[federated.0kj32fc05irryj1a0kwy61q50syt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{38A73B38-47D4-4B8B-9A31-7803E04A27B2}' />
    </worksheet>
    <worksheet name='MedianIncomeOfPeople'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Median Income of People</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
          </datasources>
          <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column caption='Median Income' datatype='integer' name='[MedianIncome]' role='measure' type='quantitative' />
            <column caption='State Full' datatype='string' name='[StateFull]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[MedianIncome]' derivation='Avg' name='[avg:MedianIncome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MedianIncome]' derivation='Avg' forecast-column-base='[avg:MedianIncome:qk]' forecast-column-type='forecast-value' name='[fVal:avg:MedianIncome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MedianIncome]' derivation='Median' forecast-column-base='[med:MedianIncome:qk]' forecast-column-type='forecast-value' name='[fVal:med:MedianIncome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MedianIncome]' derivation='Median' name='[med:MedianIncome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateFull]' derivation='None' name='[none:StateFull:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[StateFull]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]</column>
            <column>[federated.0kj32fc05irryj1a0kwy61q50syt].[Action (State Full,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:qk]' field-type='quantitative' max='2023' min='2013' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:avg:MedianIncome:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:med:MedianIncome:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:med:MedianIncome:qk]' scope='rows' value='false' />
            <format attr='width' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:avg:MedianIncome:qk]' value='64' />
            <format attr='width' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:med:MedianIncome:qk]' value='64' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:avg:MedianIncome:qk]' num-steps='10' palette='red_green_gold_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:med:MedianIncome:qk]' num-steps='10' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:avg:MedianIncome:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[:Measure Names]' />
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.7254762649536133' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:med:MedianIncome:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:avg:MedianIncome:qk]' />
              <lod column='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.7254762649536133' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:avg:MedianIncome:qk] + [federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:med:MedianIncome:qk])</rows>
        <cols>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5747A169-D626-4C35-B0BB-EB0B1AEF120F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='EVData (Tableau)' name='federated.0kj32fc05irryj1a0kwy61q50syt' />
      </datasources>
      <datasource-dependencies datasource='federated.0kj32fc05irryj1a0kwy61q50syt'>
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='16' param='vert' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='7' param='horz' type='layout-flow' w='99000' x='500' y='889'>
              <zone h='98222' id='5' type='layout-basic' w='94187' x='500' y='889'>
                <zone h='28000' id='17' name='FuelPrices' w='32386' x='32583' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='25444' id='19' name='IncreaseInEVUse' w='32386' x='32583' y='28889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='53444' id='27' name='MedianIncomeOfPeople' w='29718' x='64969' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24111' id='30' name='IncentiveByState' w='12465' x='500' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44778' id='42' name='MakerOfMostSoldEV' w='32743' x='37148' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44778' id='45' name='EV range and its MSRP' w='24796' x='69891' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22777' id='53' name='CountOfEVByState' w='32083' x='500' y='31556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30667' id='56' name='Map' w='32083' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44778' id='57' name='Credit eligibility of EV’s based on its electric range.' w='24183' x='12965' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='20667' id='89' name='Eligibility of Tax credit' w='12465' x='500' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='77' h='98222' id='6' is-fixed='true' param='vert' type='layout-flow' w='4813' x='94687' y='889'>
                <zone h='34667' id='28' name='MedianIncomeOfPeople' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]' type='filter' w='4813' x='94687' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='2667' id='46' name='EV range and its MSRP' pane-specification-id='1' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' type='color' w='4813' x='94687' y='35556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop'>
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='16' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone h='98222' id='7' param='horz' type='layout-flow' w='99000' x='500' y='889'>
                  <zone h='98222' id='5' type='layout-basic' w='89750' x='500' y='889'>
                    <zone h='49111' id='17' name='FuelPrices' w='24125' x='24625' y='889'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49111' id='19' name='IncreaseInEVUse' w='89750' x='500' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49111' id='27' name='MedianIncomeOfPeople' w='41500' x='48750' y='889'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49111' id='30' name='IncentiveByState' w='24125' x='500' y='889'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='148' h='98222' id='6' is-fixed='true' param='vert' type='layout-flow' w='9250' x='90250' y='889'>
                    <zone h='14777' id='28' name='MedianIncomeOfPeople' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]' type='filter' w='9250' x='90250' y='61442'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2550' minheight='2550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='127' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='128' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='268' h='30667' id='56' is-fixed='true' name='Map' w='32083' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='244' h='28000' id='17' is-fixed='true' name='FuelPrices' w='32386' x='32583' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34667' id='28' mode='checkdropdown' name='MedianIncomeOfPeople' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]' type='filter' w='4813' x='94687' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53444' id='27' is-fixed='true' name='MedianIncomeOfPeople' w='29718' x='64969' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='25444' id='19' is-fixed='true' name='IncreaseInEVUse' w='32386' x='32583' y='28889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='197' h='22777' id='53' is-fixed='true' name='CountOfEVByState' w='32083' x='500' y='31556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='178' h='20667' id='89' is-fixed='true' name='Eligibility of Tax credit' w='12465' x='500' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44778' id='57' is-fixed='true' name='Credit eligibility of EV’s based on its electric range.' w='24183' x='12965' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44778' id='42' is-fixed='true' name='MakerOfMostSoldEV' w='32743' x='37148' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44778' id='45' is-fixed='true' name='EV range and its MSRP' w='24796' x='69891' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2667' id='46' name='EV range and its MSRP' pane-specification-id='1' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' type='color' w='4813' x='94687' y='35556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='209' h='24111' id='30' is-fixed='true' name='IncentiveByState' w='12465' x='500' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B3D95786-F3D2-4005-8555-A1A48244E625}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='IncreaseInEVUse'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Electric Vehicle Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{85BAB79A-BAB2-4C7A-A792-AA97CA369F22}' />
    </window>
    <window class='worksheet' name='IncentiveByState'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Incentive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D6CBC921-2F10-45CC-A0C8-9F770DB5CE45}' />
    </window>
    <window class='worksheet' name='MedianIncomeOfPeople'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[:Measure Names]&#10;[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Forecast Indicator:nk]' type='color' />
            <card pane-specification-id='4' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[fVal:avg:MedianIncome:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B52B9E4A-2504-44DA-9642-B884110597FF}' />
    </window>
    <window class='worksheet' name='FuelPrices'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:FuelPrice:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7F3ED029-E94F-4780-AE68-0CC4FE20EC5B}' />
    </window>
    <window class='worksheet' name='MakerOfMostSoldEV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]' type='filter' />
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7CB2C9A1-53FB-4017-838D-725B8A58E976}' />
    </window>
    <window class='worksheet' name='CountOfEVByState'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1C3D59EE-F384-4F2A-9C4E-8C76D0ECC435}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' type='filter' />
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Year (fuelPrices):ok]' type='filter' />
            <card pane-specification-id='6' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[cnt:VIN (1-10):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:State:nk]</field>
            <field>[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
      </viewpoint>
      <simple-id uuid='{8A4722DF-639D-475D-AA6A-6F16FF5938C6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='CountOfEVByState' />
        <viewpoint name='Credit eligibility of EV’s based on its electric range.'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='EV range and its MSRP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Eligibility of Tax credit' />
        <viewpoint name='FuelPrices' />
        <viewpoint name='IncentiveByState' />
        <viewpoint name='IncreaseInEVUse'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='MakerOfMostSoldEV' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='MedianIncomeOfPeople'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AA5047E7-1EE3-488C-A62A-3DF6088311E7}' />
    </window>
    <window class='worksheet' name='EV range and its MSRP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Make:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[avg:Base MSRP:qk]' type='color' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DFC69CCB-DB1E-4252-BC07-FDB0C191DBF6}' />
    </window>
    <window class='worksheet' name='Credit eligibility of EV’s based on its electric range.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{32A6F266-1E66-474D-A02D-7AF6BE525DFB}' />
    </window>
    <window class='worksheet' name='Eligibility of Tax credit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:StateFull:nk]' type='filter' />
          </strip>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kj32fc05irryj1a0kwy61q50syt].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6154DE4A-9BA0-45C5-BB4F-0077F233F329}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CountOfEVByState' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Credit eligibility of EV’s based on its electric range.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      swAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='EV range and its MSRP' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WXNk2XYe9u0zDzlPABIzCqi5u4bu6r73kiJFUjRpUSJlM+zwiyNsy+EI
      P/rZr/wFjuCLIxQKW2GHwpZNyRJl0pe8uiLv3FNVd1V1jZjHTOR48szD9sMBUIUqJJDDyUyg
      hS+io7sTmefszLPX3muv9a1vEUopxSUu8R8omFEP4BKXGCW4UQ9gkKCUwm6a0PfqMMoarLoO
      p2XBc1wEbgDCEDAcC0EVIcRlKNkYlHwC6lgKLM+OeviXGALId9EFsjUTtdd7qK2UYFVbXX+e
      4VkkprPIXBlHYioLwpABjPIS5wHfKQOwmwZ2H66htrwH6geRXFNMKhj7YAaZpXEQ5tJj/K7h
      O2EAvuNh9+Eqyk83I5v470LOxjH56SLiE+mBXP8So8GFNwC93MTaj5/AbpqDvxkhKNyawsTH
      C2DYyzPCdwEX1gAopai+2MHGz18MbNVvh9hECnO/dRu8LAz1vpeIHhfSACilKH29ju0vXgMj
      Gr2UUrDwu3cgJuTRDOASkeDCneoopSh9s47tz0c3+QHAqht4/ZcP4bSs0Q3iEn3jwhlA7fUe
      tj9fHvUwAAB208TKjx7Dd71RD+USPeJCGYBR0bDxs+fAOfLajHITm794iQvoSV4CF8gAAs/H
      +t8+Q+D6ox7Ke6i+3EF9tTzqYVyiB1wYAyg/3YRZ0UY9jJNBga1fvoRnu6MeySW6xIUwAEe3
      sff1+qiHcSpc3Ubp8caoh3GJLnEhDGD/2034F2B13X+6Cdd0Rj2MS3SBc28Anu2i8nx71MPo
      CL7jofpyZ9TDuEQXOPcG0Fzfh2ed/9X/ENWXu6DBZUToouDc1wPUVkqjHkJXsBo6zFoLSjY+
      0PtQSkG9AIHtwXd80ICG9Q08C1bkQDjmksbdAc61AfiOh9ZufdTD6A4UaG5UBmIANKBwmxas
      vRbsqgHfdEG9E3hQDAErcRDSMqRcDGJOAWHP/WY/EpxrAzD2tXMZ9z8LURst9QOYuxr01Ro8
      vYNDdkDhGy5Mw4W51QQjcVAmk1BnUmAuK92O4VwbgNlDNdd5gFnRQIOg7wIaSimcqonm8xK8
      Vu/RpcDy0HpdgbFZR3wpD3kiDkIu3SPgnBuA3TBGPYSe4Ls+XNOFoIo9X4MGFNqrfehrtchI
      f4Hto/F4F05FR+J6YeS7AaUUCCioT0H9ABQAc3h2YchQjPRcG4CjX0ymJfUDeJbTswEEXoDG
      411YpcHsgOaOBld3kLk3CVYc7hSgNDzH2CUdTt2EpzsInONuLsOzYFUeQlqBlFfBJ6WBGcO5
      NgDfiY5luVPZw7P1VxhL50AIgR8ESCgxKJKCTDyFZ+uvcHPuamT38+3exk6DAPWvt2HvD3b3
      85o2qp9vIvtgGoww+J2ABhTWngZ9rQa3aZ/63sD1EdR9uHUL+koVXEyAOpOGXIxHXpd9rg2A
      BtFVeo1nCqg26zBsC6okw3VdBJSi0WpCM1qoaXUENABDovmBe2GHUkrRfFYe+OQ/hKc7qD3a
      Rub+5MCiRJRSuJqN5rcluI3ednSv5aDxdA/6Rh3JG4VId4RzHRuLetuLKypUMazg4nketutg
      a38HNa0BnuNhWtHVFfcydGtXg7HZiGwMncCpmdBeVwZC56aUwtioo/KrjZ4n/9vwNBuVzzeh
      r9UiG++53gFYkY/sWoQQzIxNvff6tekrkd3jbbBCd2P3bQ+NZ6NJ+umrNcjjcfAJKbJrUkqh
      PS9DX484jxNQaC/24ZsuEtcKfSf7zvUOwPcRRRklCEO6Ply2lqug7nCL+99G83k5slWVUgrt
      VSX6yf8WjI0Gmi/6H/O5NgAxfjELzhmeg6B0bryUUhhbw3V93oVTM+HU+ncBKaWwdjXoK9UI
      RnU6jPU6jI3+frdzbQCD5tMMCnJa7epQ6TYt4BwQ6IyNet8rqm95aHw7PFdOe1mGp58eVToN
      59oA5FwcDHfxUvexiVRX7zd3zkelm71vgPq9GwClFNqL8sn8pAGB+hSNZ727QufaADiRh1pI
      jHoYXSNe7E4+0d7XBzSS7kD9AE6t9xCs27QHlrw7DU7F6Nl9O9cGAACpucKoh9AVhLgMJde5
      0fq2B984P/UO/YQrjc36yLSajB4P3OffAObzI+esdIP0lbGu3LbzNPkB9Ey6C1x/JKv/IeyK
      8R6lohOcewPgJAGZK+OjHkZHYDgGuWvFrj7jn7NqN9/2evKn3aY90jAu9QPYPbhv5zoRdojC
      BzOovtpBMMTDVS/ILE1AiHWXTOrmO33z8gk2S9uIKTFYtoVcKoMPlm7jh7/4ERYm5/Bk+Rmu
      zS7iq+df43c++U08fvUtUvEE9utV/Eff+22wHSha9yo07NSHoM59Bty6BXmsu8jhud8BAEBM
      yMjffD+Le57ASTzG78wN9B4UFHE1BoHjsTRzBYZlAqAIaABREDE7MQ2BF3Dryg2sbK2hXN+H
      47qwHBtMpySyHn34jgp1BoxexnAhdgAAGLszh/ra/rmtEZj4aKGnzDXDdb4GXZmahyIp0IwW
      1nc3cW1uCU9eP8NkoQiQkO4xNVaE44Zu1f3rd6CbBj5cug3X8yDwZ9MzyFvjoZQisD04Devo
      rMJKHPiEBFbhj3G1gjbsV0opLMcGpRSmZSKgAeJKDDzHww98WLaFvWoZxfwEPN+DJEpgCIFu
      GlBlBavb68ilstitlDCWzSMmqyCEgOfe/y69MHAvjAGwAoeZX7+OV3/xcOj9AM5Cci6P7NWJ
      nj7Lyp1zhlRZBQAk1DhuX7kBAMilskd/n5uYAQDI4psMuiR255KxIgdCCDzdQWu5Aqukv/97
      MwRiRkZsIXvEzDztmbxcf4UgoLAcC0EQIJvMYCI3hr/+7G8wMz4Fy7agWwYq9SpiiopMIo1S
      tQxZlMAwLOpaA4QQPHldAcswWJxeQCGTf+8+vcyLC+ECHSI2nkLxwWDIa71CTCmY/sG1nnnq
      nHq+mmxwMQFWuYXKZxswd7STJ1VAYe8bqH6xCWOjER6a29BfCSFwXBeyJMFxHdiug5pWR6lW
      RkKNI67GUG3WwLM84moMm3vb2CrtYLeyB9f3UKqV4biha5NLZY9o6+3u1S0uXIMMSim2P3uN
      0jejl0rkFQGL//E9SCm1r+uUf7baV81vlIgtZKCv1zvP5hIgeXMsVKpok9DzfC/cVTwPFEAQ
      BAAoJEGC47lwXReqrMAPfFBKwTBMuKtQwDANiKIIy7agygoopWAZ9sQzjZCWkX0w3dX3vTAu
      0CEIISh+vABKKcoj1OLkFQFXfu9u35MfAMSscj4MgCEwt5vdURkooL3YB59q72pxbDjN2BMq
      zyRBhCSEZ6eTJnUiFkZ1RP7snbIbd/IQF8oFOgRhGEw+WMTE/XlgBOIGciaGpT/4CHImFsn1
      pPHzQfcgDIFvdX+QDFwfrtY7IS0q8Mnu6xku3A5wCMIQjN2dg5yJYf2nz+ENSZQ2fWUMU9+/
      Ci7CYh0hKYGwzMgP94QhPTMZqBeEi9GoHGoCiBml+49duDNAEEoCHg6bMASe7WL7i2XUXu8O
      7AHwqoiJO/OIj6cR2P4Ra5JwDFiJA6twfVE2mi/K0FdrUQ23awhpGZ7hILB9lKplPHn9La7N
      LWGrtIO54gxEQYTjOljeXMVEfhyvNpZx//odNFpNzIxPhWp0IgvfHE27KD4hIvvpTNcH4XO/
      A1Aaqpy5NQtey4FveuFKebhYMgSEJcjkC1DVGCpruzDr0XFSWJ5DciyLRD4DtCj0l20mKUPA
      KjzEnAwhK3ddZB6by8DcbvbEZ+kbhCB2JYvaw1CFu5DJY6u8g1K1jPnJWWzsbWFjdwvTY5O4
      PreErfIOUrEk6lod6wevEwpIhXioYzQCyMVkT1Ggc2sAlFK4NQvWTgu+fgpfJqCgAYXvOuDA
      oTA1CSdrQdc0GE2tJ2VpwjJQsnHIqgpFVsOm2N4ZW0tA4bccGC0H1nYL0mQcQk7u+KEwAovE
      jQLqj4Yvrx67kgGfkI65QAIvgGVYPHrxDe5dv4OEEgMhDD7/9ivcXLiOSr2Gnf09aLoGwzKg
      qjHIE3FY+zr8IWeFWYmDPNFb8dS5dIE83YWxVoff6o8oRiQWJM7CqGswyk3YDQOe7Yb8m0MX
      imXA8ix4RYScjUMtJKCkE3BL5umG1wH4lAhlvjs9zubz8lBXUTGnIH13EiDoS72BEVnkfzAH
      p2Ye7STDQvL2OJRib4GEc7UDUErhlA0Y681ISgSp5YM6ATIzBYzfnQNwILrkB6GcOAkjSgzP
      gjlwWTzNQetVNAXqbt2G9u0+YlezYKXOfur4Ug6+48EaQpUYFxeR+mDiSFlByqs9G4CQVkA4
      BmJehTwRH1qVmzQW63n1B85RGJRSCmtTg7HaiLY+NqAwVhuwtsIHwgoceFmAoIrgFRGcxL+Z
      /IaL1sto1RkCy0freaVjlWvCEKRujUHucUXrFHxKQuajyWO7k1xM9qYSxxCoMykQEup5Jm4U
      wCcGr+jBxQQkrhf60o86Fy4QpRTWdutokg4K8lQcUvHk1SLwAmhP9xH0EAfvBFxCROxa5sSH
      RQMKpxaW9fm2B8Iw4FQebtMOV9IoHxEJJ3riWv5EIp6x1UDj6V5X0TR1Lo34Uu7Yd/MtF9Uv
      tgbGEmVlDpn7U31TSc6FAThVE/qr4fi96lIaQvp9uRVjrQF7b7C1ufJsEtLYm8wxpRRey4H2
      ogy78j7LlTAErCqAun5PCap3wYgc1JkUOEmAb3mgrg8aAIQBiMCClTlwqgBzT0NrudqR4cmT
      CSSvF06MevmWh9qj7UhU4d4GnxCR+nACnNI/j2rkBhA4PpqPh6ckQHgGidvHyyx900PzcWng
      SRzCMUh8WADDMQfa/wZqX++c6XKxMg95Ig57Xw8zrl2Ok+FYMAIHThaADlQfGIkNd6Wm0dbw
      WImDOp+BMpk8VZ0t8ANoL/dhbERQL0wAZTKJ+NWTd6+eLjlqA9CXa3D2h1tNJOQVqPNvpEv0
      lTqc8nDqDOTpBKSJGDzdQeVXGx2fDbiYgMzHUwhsH1a5BadiwNXsMCfy9hM8ONhzKg8+IYG6
      FNQJept8JDQGcCTk2lN61HpJzKph7XMH7jelFG7DgvZyv2f1Bj4lI34lCyHTeWi5E4w0CuRb
      3tAnPwA4+wakiRhYiQtXuurwxuBUTYjjKpovyl21f/JaDvS1OuKLWcTjWWAhC+oHYYM8N2RR
      EhAQngEjcKCOj9brGqjdR2KNAoHpg4sLiN8YAyN2fkCmNGx64dQtuE0LgeWF/jpD4NbNsJPm
      GUbJSByknAp5IgE+NZgeASMzAEop7NKI9HAo4JQNyNMJeJrdkVsQFXzdhVMze9ICMrebiM2l
      QQ7cN8Iy4GQGeIcF6WlOGM2KyK30NOcgnJsBq5zOgaKUwrc86KvVsJ6g3RhI6EaJhRhYkTvi
      QYXUEh5cTACnCAPvdDnSHcCpjK6Q2qmYkKbi8PpMtvUCc6vZk0sS2B483YGQaq+Z6unRTv6j
      ezs+tOcVxG/m2gr/UkphrNehvaqcTeyjoQdgrNchFxNhVGoE8jcjywP4hjdSGY3A8RFY3sDC
      nqfB03oPDfpme4MNXB/6q9rAAgrUDcLrn5CnoQFF4+leqDLdJavV3G6i8vlmpB2BOsXIdoDz
      UADiaU5XsiTVRg2v1l6jZbQwNT6FhtZAJpmGaVsYyxWQT+cGONoDtPGDKaUw15sI+vH5O4Cv
      u7B2WpAn3+RTDjVBza1mz9f1NBu1L7eRfTA11J7GI9sBRrHyvgvf8rpyRXzfQ8vUoektmJYJ
      nuOwsbuFlt6C63buSvUTwmPlk9csX3eH5lJaO61j4VG7rEfSC8BtWmi+2B9It5p2GNkO0E0E
      5PHLp2AZBqlEChzLYm17AzzPI5fKQhJFLG+sQpUVpOJJ8DyP/AmKASeBugEI2/khS5FVXJma
      R0ADKLICUIriWBEtvYW42jkfRUjLsJtm15QPVuJOzHxSSmHtDFGWMKCw93Qos0nQgzh/VDA2
      61AmE5F2qzkNozsEd/HwDcuAKqvY2y9BFETs1yqQJRm+74MhDCr1CkzbgmVbkCWlcwMIKJgO
      SWoAoMoK1MmZ914/SaLjNPApCZIZg7XbHfVDnkqe6B5QN4BbH25LWadiQp6Kwyq1oqU7UEBf
      ryN5a2wofYJHR4br4stJggTTMtHQGjAsA4qsgGNZ1Bo1NFpNLM0uIp/OwvU8VOqVzsfAEHBn
      hPUGAVbhkVjKdRVX5xMS1OnUiZPCrVtDL0WkXgBPd2F2acSdwCq1htYwZGQ7AMN3bnsfXrs9
      sDFwieHq8hCeOYqlp+8UUXu0febBlYuLSN2ZaBsmPKvv7qDg1qyB3Jt6AdyWDSE5+BZZozOA
      LlyPQYGVwjpeLinCawxnEr2dyueTEnKfzKD5cv9Ed4gwBIzIgVN4NJ+XwXAM+KQEeSx+RFum
      lI6sDtdtWAjahC5tx8arjWXk0znkUlmUavuIySpYlsHG3hZSsSQ297aQjCdxZWr+vc/7ugt8
      lw3gPCiiHa7E0piK1jAMgADiW2xQQghYmUfqg3F4c2k49Td0aN9wYJV1+KZ7LPZvbjehvdpH
      fDEHZSoJUPQU9zcsE77vgWU5MITA9TzE1e5kXnzbb+t6vdpYQcvUUdcaqDSqeLr8HIvTC+DY
      UNRqeWsVkiBiemzyxM8H3nBqo0dmAKzKg7Ckr55U/YBwb1wRLimCiwt9Jag6gZBXTqwMI4SA
      T0hHkQ9jq4HWcqXt5KJugOa3JQSWh9hCpif///GLJwhogGQsCT/w4bgO7t+8291FTglX5tNZ
      LG+tYGpsEi/WXmN2YgprOxvgWBaEIVBEBaqktFWt7lVqsluMzg8hAJ+W4eyPRu2Zz0hHPBNC
      CJS5JJpP9gd2+CI8A3nq7Covt2WHXRY7GEZrpQou3lvllaqoaGgNABSrW2twXRf3btzpKvLC
      cCwIx5y4A+VSWfze938HHMfhw6VbICC4f/3gj2/pB7W7X6clpP1ipHRoz3ChPS6P5N6J2/n3
      iF122YCxMoDmzgxB/FoWXPxst6/29U5X4VEuLkKQpa7lVIIgAEXIID3EYUljx/dOCLCbRvQh
      WAIUfmOh62bjvWCkJ1FO4cGnJbi14caw+Yx0IqtRyMmgXgBzo/eU/ntgCNSFFCgNYO40EbhB
      WOml8ODj4rHIDvUD2OXuElqeZoMXuz9Pddww4xSwEgdJUCM3ACEl91ab3ANGHoqRpxNwG/bw
      GkWzBPL0ya4IIQTiuArCMTDWIirOZynqT3ZPJLERlkAqxKHOp8HHxLBM8Z0z0bcrz/FqYxmL
      01ewWdpCNpnBbmUPP/jwU6TiyfBNI8rmsDEBYoxHa6UWqayj0ibfMQiM3ABYiYM8nYC51l/L
      +06hTCeOtlbqB/AOoiyBG2oFEZYBI7JQF1Kwdls9axMFQQC3ZZ7InDwE9SnMnSbMPQ3pOxNh
      yeI717BsCwGloDSUgwyCAIqkQH6r8QWXlOCWh0wtJwh3MJGFOpNCa6UayWX5hASpEI3ocCcY
      uQEAgFhQ4BvuwMsShYICLilC36jD2mvBbVqnFGyQME/AMiDkjW7QqSAHCsUshbZS7XwHCShq
      D7cRX8oBDDn63NruBuYnZ2G7LhKxBGJaAzPj08ilMsdcGDErI2i5Q80HcAkRRAjHoC5kYFcM
      uM3+XCHCkpACMeAimGP3HHVN8CFoQGGs1AfGaGRjPCgCmLunVCmdAkbkIGVVcIqAwPFBD6QS
      CX8gjqvy4BMifMtF5bON3sK7JAzPdlMnwSp8qMi2b4SaSkNC7GrmWE8Az3BQ/WLr1HqF00AY
      gtSdCYg5dWjuDzBCAwhrRmnodjAkXPkAmBtN2LvRlUpSShH4PjzLiaRQRMypSFzPnyjJQQOK
      yucbQyWmHcoCUp9Ce1oeyi7AJUXErr6vceSbLmrf7HT9/RmBReqDcQgZZaiTHxiiAQSeD6dq
      wqmZcJsWPMM9dnBi+FCXRkiGyspew+m/YowhcHWzp+6Bp4HwDFK3xt/zVa19HbUvt/q+PqcK
      HTEs5WLiGGvS02xoz9on0KIAYQniN/Nt6xKoH0DfqENfrZ0dmiUE8kQcsSvZsDnfEF2foyEM
      0gAOpc319Rqs3VZXNQCEZ8ByHFiB73pVIDwDPi3B2K4PrvKMECRvFqBMJo9e6jaG3w5CRoZU
      iEN7tX/yrsUQiOMx8BMqKCh4UYCkhu6IvatHG8Z9GwSQpxIgAgldHULAqQL4uPgeTTtwQ/kW
      e9+Ap9nhs6fh2KkXgAZBqMpBAfgBAALCMeBiAoSUDDGvglOFge8IAzOAwPWhva7A2OwvnEhY
      AiGtQohL8A03XFXevRwJt1EuLoBPSWBVHrWH0SuSvT84IHV7HPJEAjSgKP9kJRIFN8ISFP7u
      FVDXh7ndhF0zETg+9nf38fLpa2xs7aDZ1OBYLigNwPE81KSK6WvTuPHpTUyPT8CvDIClSQK4
      hnO8JzABuJiI+EIWYuFk//1QIsXa1aCv1TurHyCAmFURW8gctWIdBCI3AEop3LoVxr6N6BQX
      +JSE1O1xMByLwA1C9+lQ3VlgQLiDzoIBRf2bHVh7w6mQIixB9sE0WInH3t8sHzN2x3XR1Jto
      GTpK1TIkMaxrmMiPo2W0UGnU8IMPP8EX3z7Eg1v3jz3k/K/PH9Uq7K3t4d/987/Gs19+C78D
      klh2IotP/84DXF1ciCThBQCe7ZzehooQxK9koc6n35usnumi+W2pJykYkDAvEF/MRaYGd+zy
      URoApRTWrobG09JA+l0xIov0neKpsiDGVgONJ3uR3/s0cHER6TtFlH+6cmx3Mm0LP/zlvwPP
      cpgrzsB2HLiei/XdDdyYv4Z0IoWN3S2s7W7gj3/7D49N1twPZsGpAr744ef4i3/yb2Gb3a/o
      C1fn8Xt/9DvHcgbdglV4eI7T2eQlBOkPxyGNvSkPdZsWql9tt+0k3ymEtIzUnQmwQrSR+8hM
      KqxL1VB/vDewZm+B7aP61Rac+smhUt/xIq1P7RSeZsPYarznB7MMix98+AluzF+DprfAMART
      Y0WMZQsAQspwJpnGh4u33rsmw7P46//tr/Cv/vTPepr8ALD8YgX/4n//V7BFv2tqAStzUOZT
      kGficGod5mcohfb6jSaQ27JR/XKr78kP4KjxRjcqHp0gsh3AqZmofrk5FHozI3LIfjIN7h1F
      NO3VfqhqPAIQngFhmUjULhiRxXJjF//2n/x5JBGdiYUi/ps/+W/BuGH5pK+HzfDezlIT9qD4
      5uAcxcVCVTZtuYLWqy7KTAmQ/XgaXExA5bONyIMQ8kQCydvR1QtHsp8Ejo/6492hcfsD20Pj
      yR4y9yePQmeBF8DYGl4i6F1QN4js+9eaTfzwf/3/Igtn7ixv44f/7C/xD//7P4KQlkLZkeAw
      D4PwLMWSEwvuvW77/9JQnc7c0wYSgTN3mpDGYpHRJfp2gSil0F7t95wB7BVO1Tg24e19feCi
      UGfiYDL1dQlK8eP/92/hOtH+np//5WdYf7YO4ID2zDJgBBaMyIIR2LZiVKdxmdrB0+0w+jcg
      aK/2exrXSejbALyWA6MPRbB+0Hr9pvVQTxGGyEEh9NCs+W3sVSrY2tyNaDxvEAQBfvJnf9P1
      5951MzuBXTEGyu71Wg6cajS8sb4MgFIadjQcEZ0ocHwYW82DFkOjE9o9AgWkQqznKi1W5vFq
      Yz3iQb3Byy9eQG92t1CIOfXsN70FwjOR5ELOQlRyLH0ZQOD4Q4u3t4O51UDg+JHTHXqFb7rI
      3Ct2bQSswiN9r4jV52sDGhngOR5WH6909Rkho0DIdK7OIGbVoXT7capGJG5QXwbgVIyBhTw7
      hac7sKv68ApqzoBvumAlHtkHU1CmUx2dCfikhOwn07AcG63aYBsFbr3qjqtEGILkjbGOanTF
      nAKxTxewU/i21xW1ph36igLZEflh/aLbXejl+muUa/uIq3GYtgnXczGeHUO1UYPne5CEcPVO
      J9LY2NvCRG4Mi9MLHV37cPVjOBbJGwWoMykYWw3YFSOkAFAKEAKGZyGkZSjFBIRsyIJsVpoI
      TlhQGJbB7M057KzsIF1IwWyZSI9lsLe2C47joDd1yDEZrXoLxcVJlDdKmLo6jY1n6/Dc4zuj
      Vjn7vEZpGB06/DcjcUjfm0TzWelkV5MhUIoJxJdyMLfPvn61UUUilsCjF4+RUOOQJRmu6yKm
      qPCDAMubK1icXjhdcpKGdJt+64Z7/jSltO8CiKjQrTpZy9TBcRyaLQ08zyGbzODp8jPElBhE
      XkA2lcXazjpkUUYulUHL6Nxvfncf4lQBiavhg6R+gMALa4JPUnk7afIDQCqfws7rbUgxGfFM
      Ar7nY3dlB2Nz47ANG6ZuQYkr8BwPqUIKHM9i7enqidd71yCOxu0HcOomrLIOt2mFVXJOcGCw
      B2zdA3FeGoS9wgjHgI+LR+eeQyrKWWi0NMSUGGrNGlLxJL569ggf37yHutaA47mwXRu0gxhw
      FGHn3g3Ap6Ew0jlAO3WydpgqFPFs9SWmxyZRqpWRT+cg8iICGqBc24fruUioceQzOWyVdpDo
      Qvn5tMoxwjJgT/k7LwnHJEMOodU0zNyYhWu7cG0XoiwivpjA/tY+eJFH8UoRDMtAjsvQ6zo8
      x8Pc7XmsP117b8IL0jtll44Pfb0GY7PRnr5MDxqKvPV36geQJ5NQplPHVuFOKM2iIODLZ4+g
      yip838f1uatoGTo2djcxnhuDKIgw7bMX1yi4QX0YQNC1/+8HPv72y59haWYRru8ik0hDN3Vw
      LIe9ahmLU/NY2V5DMpZAMT/R3YBOmDjtkE/njppZzBVDtedsMgMA78n0Hb7eKfqRfEzmkmBY
      9j1VNNd28frhq7af20fn0jKZiSyAgwq8zYN2Rj0cWgPHh75ShbFRR2whG3aKP1C7OAvF/MSJ
      z3dp5krH9yds2BCwX/T+tHrpcRVQ1LQ6qo0qeF7A89WXSMYSoJSiVC2DIQQr28UGd/oAACAA
      SURBVGsopHNdGQDDsQCD0SfCAPCx3iUf5ZiMXDGL0nopwhEdx/S1afi2h/o3O5F0x6ReEDb6
      LreQ+mAcfFzsajHqFazMR9JTrHcT6iHjyRCC63NXkYwnEJMVmLaFhak5uJ4LhhDopoG7Vz+A
      1oXPDYSrAT8EIdVO8G5jB0opAi+AfZC5bq1U0VqphgfjqoHA8491RLnxvZsDG5sUkzE+NY79
      X65H3hrWqZmofLaBwA1CIxgwxGw0tcM97wCEZUJtzy7CjyzL4sb8taP/nzoQRr29ePyhTxaK
      XY2FEcJ+snZptDkJVuGP4v80oDB3mzC3m2Hk5JSfiU/JiM2lIeZV3Pvtj/CT//tvO+L9d4s7
      P/gA2jd7kbAzT4Jveqh+uQV5LDZwyXZ5ovNz2Wno2QCYg36unjsabfq3wak8xLw6UrFdAJDH
      w4di7jQP+FGdTTS3bqL20AQXF5G4lsfd37qHL374eaRjEyQBN+auDGzyHyKwPVilFgjT3eLY
      DcSc0nO2/V30dYoYxlbXCfikBEZgIY1Hsyr0AsISiPkYao92UP9mtyd1Bk+zUf18E59+7z7i
      6Wi/y6ef3ociDOd5+ZY3uEZ3DEF8KR8ZHbovA5AnzlY7HjgYAikfAyEEiav5oWlKvgsho6D6
      xWY0bljNwR//8R8gnoiA8kuA3/7D38Tt29fOfm+UoADXR0DgRDAE6bvFSK/blwEIKWnknV7e
      HgPDs0hc665hXRQgLAlpIRFyYBRJwj/6T38f+Yneew8zLIN/8N/9IW7fuj50vR0gPAfJxYgW
      SQIkbxQgZqPVDurLAAjLHJMFGQXeFVKVxuPR/eidgIRJwUH4u/FYDP/Zf/Wf4MHvf9KZNONb
      yE8X8F//yT/G3e9/2H1RS0TwDRfSeKj700+dBOEZpO8UIRcTkRty3yWRvu2h/LM10AiISd2C
      i4vIfTrzXvYx8ALUvmxfOxwZmFAXZ9ATLH1nAtWWhl/++c/x5KeP29YIE4ageGUSH/3ux7j7
      W/fAizwaT/cGWpxyFg7Fu5yaieazUtdVYmJBReJaoae6hE4QSU2wvl5D89mQG10QIHN/CmL2
      ZPZh4PqoPdweXJ0AQ5BYykFbrvSvYHcGDg0dBLANG9vL29hZ3kZjuwanYUIQBeRnC1j4ZAnp
      YvZIXSJKraJewUoc8n9n/ognZJdb0Dcb4XNps2syAgsxq0CZTg1UEwiIqCZYmUrBKumRVel0
      dM/p1Kk8dYZnkb43icbTvUjU2o5dW2SRujUOt2UPfPIDYXTIqRkQsyokVcLs0gwykGGqx/vp
      ui8a0C2C2HwmLNB3vJFOfiD0EHzLAyfzIAyBeECcs/ZaMHc1BLYHwjEQsyqElAROFcIGikx3
      3Wp6RSQGQBiC1O1xVD7bGEptsJCWEV/KnfkDMRyD1AfjMLMKmi/KkUxWsRBD8noejMgNVYLF
      3NUgZlV4uoPql5snhlmpF6C1XIVTN5G+OwkvQmGynkEB33DAyTwC10fzeRnmjna8itDxYZgN
      UD8I1aG7PO/0g8hCOKzEIX2viOrnm133q+oGfEJE6sOJjg+FhBAok0mIORX6ag3GVqOnaA2f
      khCbzxzJd/uWB7cTib+I4FTN8Gzz9c6ZOQanaqL5vAwxfTY9pNasY2V7DfPFWfiBj0arCd3U
      MZGbAEMItso7kAQRPMfDsAwU8xOIKSp+9fgL5NJZbO1t49MPPoYqty+d9O2wYq/6xWb7MwCl
      MLebcJsWMh9NDaU/GBBxgww+JiL7YBq1h9ud6T92CSGrIHV7vKcfhxU5xK/mEFvIwCq1YJVa
      B42e2xjrwQFXzCqQx+NHfPdDeIYz1Co033JhbNY7PnCb2w0wHbAl13Y2cGfpNn78xU9Qa9Yw
      kR9HXIlhu7wDEMAwDTRbTaiyAlEQsb67icXpedS1Bm4uXIdhmqdOfiDcmeqPdzs6AHstB/XH
      u8jcmxyKWnTkZsapArIPptF4VorO9yZAbD5z5Nv2fBlCQHgWymQScjERFoFUDJi7Gpx6KEBL
      2FChWMqpEHMquJh44oPo1tVr6hpisgrXC1fv3coexrKFsC8Z30Fih6K7aA49UGc4A4os48tn
      j7AwOQunUIRmhIm8uBKD7dogsgrf92C7Dhq6BkWUsby1Bo4Lp44knp1dtis6nA7GcginYsDe
      14fSKmlg6tCUUtj7OrRXlb7ChEJaRvxqHnxCjOxQFLihmoS51Thzp+JUAXIxAWUqeYx+q6/V
      0HzeWeSLUoq/+uWPcWP+6sEEI2gZLfiBj3QihWuzS50N/K32SZ2Alfmh6zWdhHa9hE+DVIgh
      fWcCGPBBeGCOFiEhRUHMqrDKrZAVWTU6Iqu5ngfdseGKAG0YwOcVSKqEZD6J9EQaotKb2Cul
      FHZZR/N5ueOJ4ekOtJf70DfqSFzLQyqEtAt0sT0bloG61sDy1iqCIEBMicF27KNVtFMQ0h3N
      nosJ58IAehFOcDX7sHx6oBhahxhKKajrw23acJrWkdY/DSgISwCWYPP1Fl4/WcX+XgVum9pV
      QRYweW0KSw+uYu7DOXB8Z5OIUorWq0p/3QwJoM6mEV/MwSq1UP96p6OP+b4PkPDfumlAlRXU
      tSZS8SQIAXiusySPkJa7ymskbhTQWq4OnAF6GgjHgDCk68AII7Ao/MY8SETy7u0wNCIPIQRE
      4CDmuGNiS5RSbDxdxy/+5c+xv3F2WNExHaw8XMbKw2Vkihn84I9/DdM3Z051jyilaD4vw1jv
      sws8BfTVGqgXQJnqnALCsqHrxDIshAN/v5DpjuNDWAbqXDrMbnewZDE8C3ksDqdmRp4H6QZC
      Wj4osO/eAAa+/GNkLZZDeI6Ln/6fP8Gf/+m/6Wjyv4vqdhV//qf/Bj/7Fz+B16YwPlSvq/c/
      +d+CsdmAVWoNlXnKxQWIObVjBm5sMQtGYI9qFEYFeSJxaj+HdhBS8lASYSMzANdx8Zf/81/g
      6x896otIRgOKR3/9CH/1T394oqCs17KhvYo+YdVarQ3VAI4o39cLkMZOiY4QIHYle7RDiVkF
      7IB4NGeBkThIeTUcSzdzmaCrHbYfjMQAAj/AX//Tv8La4+hkAJe/eo0f/7MfIQjeHLgopdBe
      VgYTrw/o0A6YhCVHK/9hdjt+PQ8iMgjoQasonoGYV5H9eBqxhTctTA9dp1EgNpcOw8pxEeps
      52NQZ9ORVXydhaGT+SmlePSjh1j+6nXk13752UsUZsdw5+/dBRAmVQapGk19CsIyA5eHlIsJ
      MAILvdRAbaUEbasKV7cReD4IQqlzISEjmWKhMu8bu1JMwNhsDJUWzcWEI6o8IQTxxRwCN4B5
      Rg8HeTKJ+OLZNJeoMPRG2fVSHf/Hn/zztj57v+AlHv/5//hfIJlPovm8HKpXDxBCWobTsAaW
      FWYEFspSBruPVtDaOfscQ1gG6StjKN5fAK++WUWdhoXKZxtDyV4TliDz0dQx3/+wKYe5o6G1
      Wj3eQJGE+ZbYfAbSePy72ymeUoof/S9/hee/eD7Q+1z/wQ381n/529j/xfrAVz0uJkAqxAbW
      msnlfVTXuu+7xskCZn/zBhKT2aPXhtVAMHG9AGUyEYa8awac+oHUonfYlomAev6BkJYAZSoJ
      eSIxkC6QZ2GodzQaOl59Eb3r8y5ef/EKerU1ED7Su/BND8p0aiAF+a1mE5XlnZ5cLM90sPzD
      b9BYe5OtlosJxBazp3yqf6izaVA/QPlna6h8tgHtVQX2vg7vsC+ZG4TFUzR0IT3NRvPbEso/
      XUXzRRme4QyuoP4EDPUMsPr1Kvw2Ca4o4douVh8uIxucHX57tbEM07bCrvaBD47l4LgOeI6D
      5/m4d/3D03MMBxKRqVtjaBCEVN9+QQAXHlqN/jrvUD/A6r9/iqU/uA8lG7oWsfkMGJ4NaRwR
      u0OszMPcafbEBg5sD/pqDfp6HepMCrGFTKj4N2AMbQeglGLrRXfa9P1g48lGR++rNetgGQaU
      UnAsi0q9gppWB88JkCUJtnO2C3V4GE7eHkfiWj7MbPcIRmChLmbQKHXRmfEUBK6PjZ8+P1KK
      JoRAnU4h+/FURzqeHeGAFtJLwus9BBT6ag37v1gfivr4UA1gf2N4ZZOVrc5i/8X8OG7MX4Pr
      uTBME1emFzBVmETLaKHRakIQzmZqHrJFCSFQZ9PIfW8WYiHWVeybcAyU6RRy359FY7cKz4ou
      xGqUm6ivHNcbFVIy8t+fRfxqDqRHjU1GYCGNxQZCW/YNF5XPNmHuaQN1iYbmAlGfwmi2p8RK
      qoT8bB71vQaShSTquzWkx9Oo79WRyCdQ260jVUiiUW7A9wLIMQmCImJvZfdEaoBpWh01bTyU
      Yfz45r2evtdJKsWcKiB9ZwKe7sDa1WCVDs4j746TIeBjYYZXmUmBFTh4tova6+ib5O0/20L6
      yvH+uoRloM6moRSTMDYbB61N7VOpFoRlwCclyONxsAqP2qPtgbVEon6A+te7SH0wHhraAKJD
      wzMASts2ZwBCkhvDsshP57Dy9QrmPpgDAMhxGQzLIp6NY+fVDopXi1ASCoymefp5ghCAZ4AB
      1+y+rVJMKYVvebD2WnDrJtyWHboElIarJCHgFAFiXoVUiIGVuff83NZ2bSD9zvRSE65uQ4hJ
      R2N1KqFgr1O3QA+0SBmOBeFCsWE+JoLSkKzI8GxYrxsTwXAMfNPF/q82Bl8TTSkaT3bBSlM9
      USrOwvAOwSQkhbVrde86Lja/3YAUkzB1fRr1Uh2+F4BhCARFhGPYmFgqQqtqqJcaUOIy2FMO
      SYQhUMbjMDcGKwly2BPLbdloLVdh7WmnrKBhVx23acHYaiA2l4EylTzmQujlAbWcpRTGfhO8
      KiJwfDS/LcE6QcWO+j7gAr6pgeYDJG8UwIjcsdWXBhT1J7tDY5lSn6L+zS5y35uJRBL9bQzN
      ABiWgZJU0CidPCHNZkjz1es69Prx7G19L0wA1XbfJLX02ukShHJMhjqZHLgBSGNx6Ks1aK+7
      o1wElofmsxKMrUaoqx8Lk1Z283S68/b+LjbL28incsjEU1jb28R4Jo96q4lMIo1sIt3WVbAb
      YdVb9cutjvIjdllH1dxC5v4kWOnNgdncbkQur34WfNOF9mofieuF86MM19WNGAapQmpYt0N2
      KgcuLkJooxsUBfiUFHZZebnfc0jR0+xQTePg0Bv4p0dRGnoTumWgZepY3lnD2t4GyvUqdip7
      2ChtnTo5Aj9c+btJDnotB42npSPCYuD60F4PJul3Foyt5vEMcgQYaiJs6sb00O5VXCqG7Mml
      XF+yfG1BwmLvKOL+1A1Q/WILgeuDYU/f4iVBgsAJkEUJBARLkwsQeB4LxVmQM76o27RPdHvO
      gr2vwy6Hu7K50xxdgU1A0VqN1viGmgi7cn8RP/u/fjow3fhDcDyH+TthW1M+ISG+mItcw4dw
      TNcyf6fB00M1hMNDajvMT8xgfmLmxL9NFyZP/Wyge0CPPrSx1YCYV2FsDeiM0iGsvRaCq35k
      Z4Gh7gBqSsXch/Nnv7FPzH4wh3j2DTVBnUtHKpjLp6SBNOKwyzqYYHBEsE5LL0+C27TgNqww
      TDpCUC+IlOE7VAMghODBP/hkoGw/lufw8R88eO++yVtjUGb6P4Mo06nwQDigXYyYdCDKaOIZ
      UbOzEHgBzN3mwJvfdYIoG7QPnX6Xnczi/u9/NLDr3/3du8hOHid80SCk4iau5ZG6M9HT9kn4
      kOoQm8/ALg+wF5lPocRPF5rqBfkbU31fY9B9vzqF27Aiyw4PvSCGEIKP//4D7LzewXbE3KDp
      mzP46Pc/hlVuwamacBomPN0B9SiAMBnFSDy4hAhPsxEcsBJPAyNyUKaSUGdSYHg2lFYccB+y
      5HgWZst4r19wr5BSKjLXJrBfXQf1ezvAMiwT2Xj6RWD7If+K69+TGHpBzCEs3cK//p/+H5TX
      oumJOz4/jt/8h78Gr2x2FaVgJS6U4D58wDTkuHCKACElh397K1FV+3pn4CoLrMSB5AVs/uxF
      39ciLIOlv38PSj6B+qOdnqJAQFhb7OlO12rTda2BuBJDpVEFx3JoGS0YtolCOo/nay8xPTZ5
      1C20YzAEhd+YByv0v36PrCheUiX80f/wj7D40WLf15qZLeLBnVtwNrWuQ3SH1AXCEKRujSNz
      bxKpW6GrI6Tl94heQ6kxsDxkr0wgf7vPsDEhmPm1a1ALSRBCIE/2HgiQJ5M9Re+qjRr8wMd2
      eQfl2j6qWh1XZxZRqu0jk8ygVNvv3p2hNLKzyEgbfAmSgN/9x7+H2Q/m8It/+fP3MsBnIZaO
      4ebNRRQL/XcNNDbDxtXpu8WjrOy7oJQi6LCU8+uXTyDwPOJKDNVmDePZMfzs0S/x0Y17mBo7
      uw9y4PqY/GQRnMhj96uVricfK3KY+fUbSM6+0R8SsyrEvHoU0+8UQkaBlFehvej+N2YYgocv
      voHn+dAtE4ok4/naS8iijBdrrzCW7aGnGyGR5XZG5gK9C9uw8fKzF/j2p0+xv7nf9oEThiA/
      k8e1T69jTE3Cr0d7MGN4Fun7RQgndJ6nlKL075c74rz/7NEvkUtnEQQBXq0vI5fOQuRF3Lv+
      YUfjyH1/Fnw8JKPpew1s/uIFzEoH7gsBElNZTNxbAC/yIZmNYUA4BqzAInAPqBAd5jBYhUfm
      /iQ4RcD+L9bOxUGY4Vnk/858JCWU58YADhEEAfRaC6X1MhqlOqyWBRAcaYMWZsegplRoL8ow
      BsTzYUQW2QfT4JT3awFKf7vSkRzKXrWEsUwBW6VtWI4NAgKB5zv2dwu/MX+MfxP4AbTtKurL
      JbR263B0+6jJBGEZsBwHQRCgpuLgBQGBGxxvQkEOqMwxEawqwKkZZ9IKhIyC5M0CWJkHIWQo
      559OwMUE5L4/G0k4/dwZQCcwthtoPB5scTeflJB9MPWeNmX1y62BSq0AYZZ57DcX2uYDAj9A
      4PrwHRdey4G5rcGtdSaZeOw+LHNUvXbI0mVYBnxChDyZhJQ/3q2lG0XsQUIuJpC6PR7JtUbb
      5LcH+LYH7cXgWxO5DQv6eh2xucyx14WUNHAD4OPiqerTDMuE/QLW69DX6z0n5cJ6ZkDMKYgt
      hFKKDM+GgrYnrK5CZnDEwm7QrjFiLxipNmgvaK1UB9qC6d17+e8ceocxCY4k2NvAMxxUP9+E
      vlqLJCNt7xuoPdqGb3uhAbS5d1gQE3H39y5BOCZShu+FMoDA8WFuD4+MRd0A5jvkLz4pgU/0
      1p+gIzDkVO1PV7NR+Xwz8oLxwPZR+2IL1ilZbsIQyMXRNkaX8mok8f9DXCgDsErawOpP28Hc
      aR6LSIXSIoPT2lSmkmDa9EDzDAfVr7YQDKj1KQ0o6l/vnMq1USYTYMThiQIfAwHUd1zSfnGh
      DMDeH14f4kN4Lee9qI9YiEHMR8/XYSQO8YXsiS5I4AWoPdoZ2OQ/BPVDI/DaRLoYnkVsfrDi
      Wu2gTCYjd8EujAHQgMJpDLcM7xBu47i7QQhB8uZYtLLjB5nodpLrreX+eq11g8Dx0Xy61zZD
      q0wlT21SPgiwMo/Y4smLQz+4MAYQOF4Y2x4BTuoHzIoc0neLbd2VbpG6Pd52UrmaHUZ7hgi7
      YsDaO/k8QBiC5K3xyL77mThoxB6l73+ICxMGDdyg44jHr558gfFsAQIvoNqohck1y8BEbhzV
      RhU3F67j0cvHGMsUMDN+Nk24Hf2Bj4vIfjyF+jc7vWdIGYL4leypujetlepQexIf3Xe5Ekak
      TgjJcjKP9N0JVL/YGuy5jACpW2MQOmj63QsuzA6ALvJ1lm3h0YvHaGhNUACe7yEIAnieh71q
      GS/WX2N3v4S1nc7kE0+bfId9kWNXsiBdpub5hITsg2moc+2VHDzT7ZnB2S+8lgPnlAOxkJSR
      uT85sEMxYcOVfxDCw4e4MAbQTZXU4vQC4moccTUGlmHg+z44joNmtJBP58AyDD66cedYN5l+
      7k1YBvErWeR/bQ6xK9nwoNYmkUV4BtJYDJmPJpH9dBpCUjrVr7VLrZGs/oc4q+hfSMnIPpiO
      XLQq5CBNQZ5IDLSC8MK4QIftNjthRRbzEyjmJ47++7T3dYLTfN2w/WsAt2mFEuCuf9BdnoFv
      uaABBcOzR3KCQkbuSvXY6pK5GTXsmhG2sj0lM80pAjIfTULfqKO1XO3PJWIIlKkk4leykYtg
      nYQLYwCMwIIR2K4LMqIA/07oLaRF+7D2tFAGsWGdapi+F8A3XVi7GliFD7s9jsfDYpvTpNcD
      OtS2RichsDz4lnsiMfBtEJZBbC4DeSIBY6MOc7vZ1bNi+FBoV51Ng1OHl22+MAZACIGQlqPR
      3+/qxgB/QI2mNGyMp6/WwgRZD6WRvuHCWA/btgppGepcGmJOPTn2b3vnogzRM9obAKUUge3D
      qRlwNRu+5YF6AVhFAAg50jllWOZgkThgsHIMWJkHn5AgZhUIaWUkHWIujAEAgJiPDd0AhJQM
      RmQR+AH0lWrYKDsin9ypmXBqJoSMgvQJxfq+c3bN8iFaRgsgBLZtQ+AFuL4LWZBQ0+rIJDNo
      aA2s727i3vU72KuUMJEbg2lbUOWzeTUnVdnRgMIqtWBs1Dtr3s0B8kQcynQKnMIPRPmiF1ww
      A1DDyWgPb1WUiwl4LQf1b3YiFcJ6G07VQPnna0h9MH68QXQXka+HLx6jVC1jaeYKStUyMsk0
      sskMtko72Njbgm7q+GDxFp68/hYbu5tQ7n4P1WYNV6bO1ml6e6ejlMKpm2g+K3flngWOD2Oz
      AWO7CXU6idiV3EhW/Hcx+hF0AeZAz35YYCUOhGVQ+WxjYJP/EIHlofr5Zqg6cTjxu4h+FDI5
      3Fm6jamxIuaKM/B9H09ef4tELA4CAt/38fD5N9AtA4QheLWx3HF0hRzMEkopWstVVD/f7P1s
      ElDoa3VUfrUOd8QiW8AFLIgJ/AD7P1+LXCT1JIg5FXbF6GoljgKxxSxi8xn4povyT1dHLkaV
      vluEmFPReLoXKRuXcAwy9ycHovvfKS7UDgCEu0Dy5thgBG/fAmEJ7Io+9MkPAK1XFRibDbAi
      dy58ZVbm0XxejpyKTr0A1S+3RroTjP7X7QFiRkHiWg9qAp2CHPi9I1x5m89KcGrmUEOCJ4Hw
      DJyaCWNjMFwk6gWoPdxu2zhl0LiQBgCEGp3xpdzZb+wSrMKDGQDpqmtQoP5kNyyPHCE4RYD2
      erAlqL7hovW6MtT+wIe4sAZw2PM2eWusr7akb0PMqxCz6uj0799BYPtwGoNvFXoaPN0ZfB8w
      APp6rSO1jahxYQ3gEMpkErnvzfbFFiQ8i8TNApI3CjC2BttSqVt4mn1qgfygMbQKPAroa8Ol
      fAMXMArUDpRSOFUT+lrt4PB69mdYmYcymYAynQLhmLBn14B7ivUEgpGcR1iZg28Obzc8Sw5m
      EDgHzm40IISEKfWMDOqGTRSchgnPcEFdH5QeCEjJHPi4BCEtg0+IR7HwwB1uwX1XoGFOYpg8
      KE4VQHhmqAZAvQCuZg81LPqdMYBDEEJABBZyMXHUFebtTa5d8qdXbs+wwKdk0KoxHEkYhiBx
      o4Daw+3B3+sdODVzqAZw4c8AnYAQcvRPO4yq6KRTuE0LyVtjQzkPJK7mwMo8qD/80OQw1Lff
      xnduB+gFgRfAqY822nIW/ANGZuqDcdS/2R1YkUx8MQtlOhUevg9uUWvWsbG3BU3XkIjFYVoW
      OI6DaZnIZ3IwTAOaoWMyP46V7XVMFiawVyljaqyI9d1NfLh0C6Zt4dX6a2RTWTS0BhKxBPLp
      HCr1ClZ31vF3P/p1xJRY2LRkiPgPYgc4C55mjbTqqlM4NRNSIYb0nQkQPuJHxxAkrhegzmfe
      2ykdz0Vda2C/XkGzpYGComW0oBktGJaJu9c+hG7qCCjFfHEGpmVCt3RwLAuWYbG5t42N3S04
      notmq4mABmAIg/XdDXiBj9mJGahyKDMz6A6i7+JyBwDgasPddnuF17JBCIGUjyH3yQwaT/fg
      1PqXimFVAalbY8cKdN6uAFMkGcX8OCZyYwCAmlbH0swiXM+FH/j46vnXSCdSYBgGW3vbmB6f
      hOXY8IMALMOgmB9HQAM8X32FfDqHUm0f6UQKuVQGr7dW4Pk+LMeGLEpDZ4h+Z8Kg/aD5ohzq
      bJ5ziHkVmXtv5NVpQGHtaWgtV3vynRmBhTKTQmw2/V7oMXB87P3N8tB3RnU2PViayzu43AGA
      viMrfuCjZegoVctYmJzDV8+/RjE/DlVWEQTBQTF+Fg+fP8ZcceZoJe16nO9kZAlDIE8kII3F
      YVcNWDtN2JXTI0W+78N1HVAB4AQRXq0Oy7Wg5hOQ02+kWRiBBSvz8Id8KOUTw6V+XBoA+vc7
      fd/Hzv4u1nY2YDs2VFlBpVGFaVvwPA9NXYNmtGC7NrbLOz0bQLuoDGEIpJwKKaeC+gF8ywsL
      9B3v6LtppTrKL7aglWsITroOIVAyMeRvTGHizjw4kYeYkWEM0wAIBqb/0w6XBgD0Ta1+uvwM
      juuCgMC0LTR1DblUFq83V5BP51Cu7yPuxCAJIhJq7xo3pykzHL2HZUIZ8wMWqaNbWP7xY+y/
      2D6d2k0pjIqGtZ98i91Hq7jyOx9CLSSGmhkPy0+HOyUvzwAAGs9KMIYsPdgLhKyC7EedN7zW
      y018+69/BavL5oNAmDuZ+vQqFCoNLTaf+mAc8kTvnSx7wWUYFKHO50UAK3U+Tquu48mf/byn
      yQ+E2fONXzxHbb8COgQiEhcTII0NTgGuHS4NABh515NO0WlxTOD5ePGXX8Jp9Z/cKy1vwdIH
      L0ufuF7oyMWLGpcGAIy86KRTdNqZZvebNTS3qtHclFJU9kpARDUXJyG2kBn64fcQlwYAgJX4
      c78LEJ7pyFB918P2l68jvbdtWPAVOhCpQnkijlibpiDDwKUBHEDMRd/xJUqIGaWjCdjYrMBq
      RO+y1DbLSN+Lrh8CAMhTSSRvjY/E9TnEpQEc4JA6fV7RaXSk+np3IPfXtagXAQAAAxNJREFU
      dmogEovcp9MQc/11aSQsc1SBN8rJD1wawBH4mHhu+uC+C1bmO+6Nq+8Ppqgn8HxYNR2sxCN9
      dxKpDye6dhsJGyo/538wC3UqNTK3521cjPjfkBBbyKB6SkOIUUGde5+rcxJoQOEaJ2vsUEqx
      urcBSinqehO+72MiU4AiySCEwXZlD01DQz6ZwWLxZLlEu2UijnRIwRiPQyrE4FQNmHstOHUz
      LGp/O6tOwjJHPi5BKqiQCjGwUoR91SLApQG8BTGjQMyrsEesyf82uLgIpRv3rE1ekxACy7HB
      MixkQUJAAzi+h8lYCn/z+JcoJLO4Mb2IrcreKdd+55oMgZhTIebUI8n4wPVBvQCEISAcC0Zk
      w8725xSXBvAOEtcK2K+ujaQa6j0QIHE933GROGEIOEkA2hyCC6kcBI5HVavDD3wQANuVXcyN
      TWE6V8TjtWeYyhXbXp87ZfUmhIAVuQuTVDzExRrtEMApPBLX82g8OWUlHBJi85mu62PlTAyt
      vZNpHdlEKCwcV07uRP/h/M221yUMgZxu38H+ouL87k0jhDKZhDqbGukYxEKsp/h4amYwXHo5
      HYOgXoyEYTe4NIA2iC/lB9qd8DTwKRmp273FxzPzY2D56Df23LVJEOa7N12+e98oIpCD5szy
      ZHKo9xVzSth6tMfSQF4RUbg1E+mYOFnA+O3ZSK95XnBpAKeAMATJmwXEr+YGLscOAqizKaTv
      FPuui53+dAl8hO7K9CdXIcQ64yFdNFwawBkghCA2l0H2wfTA+EKEJUjfLSJ+tfOIz2kQVAlX
      f/9+JFnWzJVxFO+d3UbpouKyIKYL0IDC2GqgtVyJpk8ZAaSxOOJLOXBy9Ami0tMNvPzhw55D
      uqmZPK7/4QNwwvlKXkWJSwPoAdQPYO5qMDYbcHuQL2cOpBuVyeTAG2DU18t48Rdd1gYQoHh3
      AbO/fhPsEJpVjxKXBtAnfNOFXTXg1C14LRu+6R5TZSAcA0Zkwasi+IQEISODT0hDJYF5jovt
      L5ex/eUyPOv08sb0fAEz37uO+MTwmhGOEv8/TKsbFUp9rHMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Eligibility of Tax credit' width='164'>
      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
      PHlbWxsuX74MrXbxf2pKSgoOHjyI9vZ2/7ZvvvkGP/zwAxobGxcdX1xcjPHx+QXubTYb3nzz
      Tbz77ru4ffs25HK5X3iVSoXZ2Vl4PB7I5Wu7vfn+ZTe89jG4b3fBM/TPiC6yL1NrId/5AuSb
      +Zz1Hg4iKmR9fT3q6+sf23bz5k2cPHkSZrP5sfKP1+vFxYsX8dxzzyE9PX3Zc3q9XjQ1NWH/
      /v1IT0+HSqWCx+OB2+2GQqGA0+lEUlLSmmVciNjHVBrq/HLOWfrX/BZamVqLBLUOit+UIFGf
      x9XSgpEiokIGw8jICL766qtV+3/9/f0YHBzEG2+8AQDIysrC2NgYent7sWfPHjQ3N6O4uDhi
      cYpyAvMv/vTZx+G1j/nfueizj8FrH/f/KUonNv3iwlgytS5us+BKMCGkmPWef/75JZt3EYfD
      gcbGRhw7dsw/Ak9LS8PZs2fx8ssvY3R0FLW1tSgrK4tK3DK1DlDrkAgSK1wk+Hw+X6yDIAiR
      uJpcQbAPCUkwBQlJMAUJSTAFCUkwBQlJMAUJSTAFCUkwBQlJMAUJSTAFCUkwBQlJMAUJSTAF
      CUkwBQlJMAUJSTAFCUkwBQlJMAUJSTAFCUkwBQlJMAUJSTAFCUkwBQlJMAUJSTAFCUkwBQlJ
      MAUJSTAFCUkwBQlJMAUJSTAFCUkwBQlJMAUJSTAFCUkwxX8AI6QAzlM39mAAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='FuelPrices' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAV40lEQVR4nO3dSXMbaX7n8W8u2HeAILhpIYsltWpt93jcXtqOmbDDMTE++DSXOc1L6bcx
      EXOYy1zmBfjiCIe3iA7b3XZXqTaJoMCdAImFWBJLbs8cSKJUHlJFkAAoKf+fCIXERfk8T2b+
      kOs/U1NKKYQIKP2+OyDEfZpqADzPm+bkruS67szbmFc7nucxjw3wPMbi+z6+78+8nWmPRbYA
      ItAkACLQJAAi0CQAItAkACLQJg5Ap1XHvjjZc3J8QLmyP+0+CTE3EwXAtft89+WvaQ7Ov97b
      3yeXzcyiX0LMhTnJL29/9y2ugkajwVIyz8cff0r5RZlk9nNM35/LeW3f9+d2XnvW7VyeO9c0
      bebtzHosl8t91tcCpj0WbdJbIazGAU5iBd3ucHpcpe/pfPzRE3TOL+wYhjG1zl3FdV1Mc6Lc
      vrXteJ6HruszD8A8xnK54uv6bA8rpz2WiaeUKKyd/yOaJZ3OTq0jQtwHOQskAk0CIAJNAiAC
      TQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJtogAo3+Nf/vav
      OLEAfL767b/ym397zuwfhyTEbExUD3C4UyaWzjIcjSDhE00skmPIUCkiUhF2qzakImwy0x7L
      RAFI5xaw2nUce0SnA0OrxpkKs6xp6BeVYFIRdnNSETa5aY9l4pLIN5GSyMlIACY37bHIQbAI
      NAmACDQJgAg0CYAINAmACDQJgAg0CYAINAmACDQJgAg0CYAINAmACDQJgAg0CYAItNnfVinE
      W8h1Xbrd7mQB6Hdb7B2e8ODxBoloiIPdbSzX5OkHj2bVTyHuxL8o1Op0OlSrVdrtNtlsFsdx
      sG17sgCEInGKuQTHtVM2H61weHjI2sZH42ogpdTMK8Lm0ca82nnfxvL637Ns56o2lFJ4nke/
      38eyLBzHYXt7G8/zWFpaolAokMlkePjwIbFYbFy3MlEADEOj2xuih+KA4vf+4I95+eVzRqUC
      Id9HKTXzkrh5tDGvdi7bmHVBzLzGMq8wX5ZFnp2dUa/X6fV6LCwsUKlUiMViLC8vs7S0RKlU
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='IncentiveByState' width='173'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='IncreaseInEVUse' width='192'>
      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
      DDT/H6TmZ4U20TFmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MakerOfMostSoldEV' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      zS6DEE3z/w60ayV6FxhOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MedianIncomeOfPeople' width='192'>
      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
      KQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
